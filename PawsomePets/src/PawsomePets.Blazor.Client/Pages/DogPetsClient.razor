

@page "/dog-pets-client"

@attribute [Authorize(PawsomePetsPermissions.DogPetsClient.Default)]
@using PawsomePets.DogPetsClient
@using PawsomePets.Localization
@using PawsomePets.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using PawsomePets.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using Volo.Abp.Http.Client
@inherits PawsomePetsComponentBase
@inject IDogPetsClientAppService DogPetsClientAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<PawsomePetsResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["DogPetsClient"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>

        <Row>
            <div class="col-md-8 col-lg-10">
                <div class="mb-3">
                    <Form id="DogPetClientSearchForm">
                        <Addons>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit @bind-Text="@Filter.FilterText"
                                        Autofocus="true"
                                        Placeholder="@L["Search"]">
                                </TextEdit>
                            </Addon>
                            <Addon AddonType="AddonType.End">
                                <SubmitButton Form="DogPetClientSearchForm" Clicked="GetDogPetsClientAsync">
                                    <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                                </SubmitButton>
                            </Addon>
                        </Addons>
                    </Form>
                </div>
            </div>
                
                   <div class="col-md-4 col-lg-2">
            <div class="mb-3">
               <Button Color="Color.Primary" Outline Style="width:100%" id="AdvancedFilterSectionToggler"
                         Clicked="@(() => ShowAdvancedFilters = !ShowAdvancedFilters)">@L["Filters"]
                         <i aria-hidden="true" class="fa ms-1 @(!ShowAdvancedFilters ? "fa-angle-down" : "fa-angle-up")"></i>
               </Button>
            </div>
       </div>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")"  class="mt-3">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Name"]</FieldLabel>
                        <TextEdit Text="@Filter.Name" TextChanged="@OnNameChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Breed"]</FieldLabel>
                        <TextEdit Text="@Filter.Breed" TextChanged="@OnBreedChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinAge"]</FieldLabel>
                        <NumericEdit TValue="float?" 
             Value="@Filter.AgeMin"
             ValueChanged="@OnAgeMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxAge"]</FieldLabel>
                        <NumericEdit TValue="float?" 
             Value="@Filter.AgeMax"
             ValueChanged="@OnAgeMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Gender"]</FieldLabel>
                        <TextEdit Text="@Filter.Gender" TextChanged="@OnGenderChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Color"]</FieldLabel>
                        <TextEdit Text="@Filter.Color" TextChanged="@OnColorChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinWeight"]</FieldLabel>
                        <NumericEdit TValue="float?" 
             Value="@Filter.WeightMin"
             ValueChanged="@OnWeightMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxWeight"]</FieldLabel>
                        <NumericEdit TValue="float?" 
             Value="@Filter.WeightMax"
             ValueChanged="@OnWeightMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["HealthStatus"]</FieldLabel>
                        <TextEdit Text="@Filter.HealthStatus" TextChanged="@OnHealthStatusChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinVaccinations"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.VaccinationsMin"
             ValueChanged="@OnVaccinationsMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxVaccinations"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.VaccinationsMax"
             ValueChanged="@OnVaccinationsMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinPrice"]</FieldLabel>
                        <NumericEdit TValue="decimal?" 
             Value="@Filter.PriceMin"
             ValueChanged="@OnPriceMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxPrice"]</FieldLabel>
                        <NumericEdit TValue="decimal?" 
             Value="@Filter.PriceMax"
             ValueChanged="@OnPriceMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinPromotionPecents"]</FieldLabel>
                        <NumericEdit TValue="float?" 
             Value="@Filter.PromotionPecentsMin"
             ValueChanged="@OnPromotionPecentsMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxPromotionPecents"]</FieldLabel>
                        <NumericEdit TValue="float?" 
             Value="@Filter.PromotionPecentsMax"
             ValueChanged="@OnPromotionPecentsMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["IsStock"]</FieldLabel>
                        <Select TValue="bool?"
		SelectedValue="@Filter.IsStock"
		SelectedValueChanged="@OnIsStockChangedAsync">

<SelectItem></SelectItem>
<SelectItem Value="true">@L["Yes"]</SelectItem>
<SelectItem Value="false">@L["No"]</SelectItem>

</Select>                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["OtherInformation"]</FieldLabel>
                        <TextEdit Text="@Filter.OtherInformation" TextChanged="@OnOtherInformationChangedAsync" />                       
                    </Field>
                </Column>
            </Row>

        </div>

        </Row>


    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>        
        @if (SelectedDogPetsClient.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllDogPetsClientSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedDogPetsClient.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedDogPetsClient.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }
                    
                <div>
                    @if ((SelectedDogPetsClient.Count == PageSize || SelectedDogPetsClient.Count == DogPetClientList.Count) && TotalCount > SelectedDogPetsClient.Count)
                    {
                        if (!AllDogPetsClientSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }
                    
                    <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedDogPetsClientAsync">
                        <Icon Name="@IconName.Delete" /> @L["Delete"]
                    </Button>
                </div>
            </div>
            
            <hr class="my-1 mx-0"/>
        }
        <DataGrid TItem="DogPetClientDto"
                  Data="DogPetClientList"
                  
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedDogPetsClient"
                  RowSelectable="@((args) => CanDeleteDogPetClient)"
                  SelectedRowsChanged="SelectedDogPetClientRowsChanged"
                  
                  
                  
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                       <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>   
            <DataGridColumns>
                
                @if (CanDeleteDogPetClient && DogPetClientList.Any())
                {
                    <DataGridMultiSelectColumn TItem="DogPetClientDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }
                
                <DataGridEntityActionsColumn TItem="DogPetClientDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="DogPetClientDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="DogPetClientDto"
                                          Visible="@CanEditDogPetClient"
                                          Clicked="async () => await OpenEditDogPetClientModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="DogPetClientDto"
                                          Visible="@CanDeleteDogPetClient"
                                          Clicked="() => DeleteDogPetClientAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>

                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="DogPetClientDto"
                      Field="ImageId"
                      Caption="@L["Image"]">
                      <DisplayTemplate>
                        @if (context.ImageId != null && context.ImageId != Guid.Empty)
                        {   
                            <Icon Name="IconName.FileAlt" Clicked="async () => await DownloadFileAsync(context.ImageId)" />
                        }
                        else
                        {
                            <span>"-"</span>
                        }
                      </DisplayTemplate>
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="Name"
                      Caption="@L["Name"]">
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="Breed"
                      Caption="@L["Breed"]">
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="Age"
                      Caption="@L["Age"]">
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="Gender"
                      Caption="@L["Gender"]">
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="Color"
                      Caption="@L["Color"]">
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="Weight"
                      Caption="@L["Weight"]">
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="HealthStatus"
                      Caption="@L["HealthStatus"]">
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="Vaccinations"
                      Caption="@L["Vaccinations"]">
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="Price"
                      Caption="@L["Price"]">
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="PromotionPecents"
                      Caption="@L["PromotionPecents"]">
              </DataGridColumn>

              <DataGridColumn TItem="DogPetClientDto"
                      Field="IsStock"
                      Caption="@L["IsStock"]">
                    <DisplayTemplate>
                        @if (context.IsStock)
                        {
                            <Icon TextColor="TextColor.Success" Name="@IconName.Check" />
                        }
                        else
                        {
                            <Icon TextColor="TextColor.Danger" Name="@IconName.Times" />
                        }
                    </DisplayTemplate>
              </DataGridColumn>


              <DataGridColumn TItem="DogPetClientDto"
                      Field="OtherInformation"
                      Caption="@L["OtherInformation"]">
              </DataGridColumn>

            </DataGridColumns>
            
            
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateDogPetClientModal" Closing="@CreateDogPetClientModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">

        <Form id="CreateDogPetClientForm">
            <ModalHeader>
                <ModalTitle>@L["NewDogPetClient"]</ModalTitle>
                <CloseButton Clicked="CloseCreateDogPetClientModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewDogPetClientValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewDogPetClient"
                            ValidateOnLoad="false">
                    
                    
                        <Field>
                            <FieldLabel>@L["Image"] *</FieldLabel>
                            <InputFile class="form-control file-input" OnChange="@OnNewDogPetClientImageChanged" required/>
                            @if (OnNewDogPetClientImageLoading)
                            {
                                <p>@L["FileUploading"]</p>
                            }
                            <p class="text-muted pt-1"><i class="fa fa-info-circle"></i> @L["MaxFileSizeLimit", 10]</p>
                        </Field>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDogPetClient.Name"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Breed"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDogPetClient.Breed"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Age"]</FieldLabel>
                            <NumericPicker TValue="float" @bind-Value="@NewDogPetClient.Age"   >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Gender"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDogPetClient.Gender"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Color"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDogPetClient.Color"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Weight"]</FieldLabel>
                            <NumericPicker TValue="float" @bind-Value="@NewDogPetClient.Weight"   >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["HealthStatus"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDogPetClient.HealthStatus"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Vaccinations"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewDogPetClient.Vaccinations"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Price"]</FieldLabel>
                            <NumericPicker TValue="decimal" @bind-Value="@NewDogPetClient.Price"   >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["PromotionPecents"]</FieldLabel>
                            <NumericPicker TValue="float" @bind-Value="@NewDogPetClient.PromotionPecents"   >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Field>
                        <Check TValue="bool" @bind-Checked="@NewDogPetClient.IsStock" >@L["IsStock"]</Check>
                    </Field>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["OtherInformation"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDogPetClient.OtherInformation"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateDogPetClientModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateDogPetClientForm" Clicked="CreateDogPetClientAsync" Disabled="@IsCreateFormDisabled()"/>

            </ModalFooter>
        </Form>

    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditDogPetClientModal" Closing="@EditDogPetClientModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">

        <Form id="EditDogPetClientForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditDogPetClientModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingDogPetClientValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingDogPetClient"
                            ValidateOnLoad="false">
                    
                    
                    <Field>
                        <FieldLabel>@L["Image"] *</FieldLabel>
                        @if (HasSelectedDogPetClientImage)
                        {
                            <div class="mb-2">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="tooltip" data-bs-placement="top" title="@L["DownloadSelectedFile"].Value" @onclick="@(async () => await DownloadFileAsync(EditingDogPetClient.ImageId))"><i class="fa fa-file-alt"></i></button>
                                    <button type="button" class="btn btn-primary btn-danger" data-bs-toggle="tooltip" data-bs-placement="top" title="@L["RemoveSelectedFile"].Value" @onclick="(() => { EditingDogPetClient.ImageId = Guid.Empty; HasSelectedDogPetClientImage = false; })"><i class="fa fa-trash"></i></button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <Field>
                                <InputFile class="form-control file-input" OnChange="@OnEditDogPetClientImageChanged" required/>
                                @if (OnEditDogPetClientImageLoading)
                                {
                                    <p>@L["FileUploading"]</p>
                                }
                                <p class="text-muted pt-1"><i class="fa fa-info-circle"></i> @L["MaxFileSizeLimit", 10]</p>
                            </Field>
                        }
                    </Field>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDogPetClient.Name"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Breed"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDogPetClient.Breed"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Age"]</FieldLabel>
                            <NumericPicker TValue="float" @bind-Value="@EditingDogPetClient.Age"   >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Gender"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDogPetClient.Gender"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Color"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDogPetClient.Color"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Weight"]</FieldLabel>
                            <NumericPicker TValue="float" @bind-Value="@EditingDogPetClient.Weight"   >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["HealthStatus"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDogPetClient.HealthStatus"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Vaccinations"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingDogPetClient.Vaccinations"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Price"]</FieldLabel>
                            <NumericPicker TValue="decimal" @bind-Value="@EditingDogPetClient.Price"   >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["PromotionPecents"]</FieldLabel>
                            <NumericPicker TValue="float" @bind-Value="@EditingDogPetClient.PromotionPecents"   >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Field>
                        <Check TValue="bool" @bind-Checked="@EditingDogPetClient.IsStock" >@L["IsStock"]</Check>
                    </Field>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["OtherInformation"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDogPetClient.OtherInformation"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditDogPetClientModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditDogPetClientForm" Clicked="UpdateDogPetClientAsync" Disabled="@IsEditFormDisabled()" />

            </ModalFooter>
        </Form>

    </ModalContent>
</Modal>

